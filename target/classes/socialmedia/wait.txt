package socialmedia;


import javafx.application.Application;
import javafx.stage.Stage;

public class WelcomePage extends Application {

    private String currentUser;

    @Override
    public void start(Stage primaryStage) {
        UiComponent ui = new UiComponent(primaryStage);

        ui.configureStage("Slick Modern UI Demo");

        ui.loadTheme("file:styles/default.css");

        ui.setupLayout("modern-layout");

        ui.addLabel("Welcome to the Modern UI!", "modern-label", 2.5);

        ui.addTextField("Enter your username", "modern-field", 300);

        ui.addPasswordField("Enter your password", "modern-field", 300);

        ui.addButton("Login", "modern-button", () -> {
            String username = ui.getTextFieldText(0);
            String password = ui.getPasswordFieldText(0);
            if (username.isEmpty() || password.isEmpty()) {
                ui.showCustomDialog("Error", "Username and password cannot be empty.");
            } else {
                currentUser = username; // Track the logged-in user
                ui.showCustomDialog("Success", "Welcome, " + username + "!");
            }
        });

        ui.addButtonWithIcon("Settings", "modern-button", "file:icons/settings.png",
                () -> ui.showCustomDialog("Settings", "Settings feature coming soon!"));

        ui.addImage("file:icons/logo.png", "modern-image");

        ui.addButton("Toggle Theme", "modern-button", () -> {
            String currentTheme = ui.getScene().getStylesheets().get(0);
            if (currentTheme.contains("default.css")) {
                ui.loadTheme("file:styles/dark.css");
            } else {
                ui.loadTheme("file:styles/default.css");
            }
        });

        ui.displayStage();
    }

    public String getCurrentUser() {
        return currentUser;
    }

}

.post-action-button {
    -fx-font-size: 14px;
    -fx-text-fill: #1DA1F2;
    -fx-padding: 8 15;
    -fx-border-color: #1DA1F2;
    -fx-border-width: 1;
    -fx-border-radius: 15;
    -fx-background-radius: 15;
    -fx-background-color: #E8F5FD;
    -fx-cursor: hand;
    -fx-alignment: center;
    -fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 0.1), 5, 0, 0, 1);
    -fx-transition: 0.3s;
}











package socialmedia;

import javafx.application.Application;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ScrollPane;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class HomePage extends Application {
    public BorderPane root = new BorderPane();

    @Override
    public void start(Stage primaryStage) {
        root.setLeft(createNavigationPanel());
        root.setTop(createHeader());
        root.setCenter(createFeedScrollPane(primaryStage));
        root.setRight(createSuggestions());

        Scene scene = new Scene(root, 1200, 700);
        scene.getStylesheets().add("file:styles/slick.css");
        primaryStage.setTitle("Home Page");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private VBox createNavigationPanel() {
        VBox navPanel = new VBox(15);
        navPanel.getStyleClass().add("nav-panel");
        String[] navItems = {"Home", "Explore", "Notifications", "Messages", "Profile"};
        for (String item : navItems) {
            navPanel.getChildren().add(createNavItem(item));
        }
        return navPanel;
    }

    private Label createNavItem(String item) {
        Label navItem = new Label(item);
        navItem.getStyleClass().add("nav-item");
        return navItem;
    }

    private HBox createHeader() {
        HBox header = new HBox(20);
        header.getStyleClass().add("header");

        header.getChildren().addAll(createLabel("Simple Social Media Simulator", "logo"),
                createLabel("üîç Search ", "search-bar"),
                createLabel("üë§", "profile-icon"));
        header.setAlignment(Pos.CENTER_LEFT);
        return header;
    }

    private Label createLabel(String text, String styleClass) {
        Label label = new Label(text);
        label.getStyleClass().add(styleClass);
        return label;
    }

    private ScrollPane createFeedScrollPane(Stage primaryStage) {
        ScrollPane feedScrollPane = new ScrollPane();
        VBox feed = createFeedPage(primaryStage);
        feedScrollPane.setContent(feed);
        feedScrollPane.setFitToWidth(true);
        return feedScrollPane;
    }

    private VBox createFeedPage(Stage primaryStage) {
        VBox feed = new VBox(25);
        feed.getStyleClass().add("feed");
        String[][] userData = {
                {"Natnael Solomon", "@natnael"},
                {"Nebiyu Samuel", "@nebiyu"},
                {"Leul Teferi", "@chombe"},
                {"Leul Zegeye", "@scarlxrd_x"},
                {"Lealem Addis", "@nowayhome"}
        };
        for (int i = 0; i < userData.length; i++) {
            feed.getChildren().add(createPost(userData[i], i + 1, primaryStage));
        }
        return feed;
    }

    private VBox createPost(String[] userData, int postId, Stage primaryStage) {
        VBox post = new VBox(10);
        post.getStyleClass().add("post");

        HBox postHeader = createPostHeader(userData);
        Label postContent = createLabel("The big, brown fox jumped over the lazy dog.", "post-content");
        postContent.setWrapText(true);

        HBox postActions = createPostActions();
        post.getChildren().addAll(postHeader, postContent, postActions);

        post.setOnMouseClicked(event -> openPostInNewWindow(postId, userData[0], userData[1], postContent.getText(), primaryStage));
        return post;
    }

    private HBox createPostHeader(String[] userData) {
        HBox postHeader = new HBox(10);
        VBox userInfo = new VBox(5);
        userInfo.getChildren().addAll(createLabel(userData[0], "post-full-name"), createLabel(userData[1], "post-username"));
        postHeader.getChildren().addAll(userInfo, createLabel("2h ago", "post-timestamp"));
        return postHeader;
    }

    private HBox createPostActions() {
        HBox postActions = new HBox(20);
        postActions.getChildren().addAll(createActionButton("‚ù§ Like"), createActionButton("üí¨ Comment"), createActionButton("üîÑ Share"));
        return postActions;
    }

    private Button createActionButton(String text) {
        Button button = new Button(text);
        button.getStyleClass().add("post-action-button");
        return button;
    }

    private void openPostInNewWindow(int postId, String fullName, String username, String content, Stage primaryStage) {
        primaryStage.setTitle("Post Details - Post " + postId);

        VBox postDetails = new VBox(20);
        postDetails.getStyleClass().add("post-details");

        VBox postCard = new VBox(20);
        postCard.getStyleClass().add("post-card");

        HBox userInfo = createPostDetailsHeader(fullName, username);
        Label postContent = createLabel(content, "post-details-content");
        Button closeButton = new Button("Back");
        closeButton.getStyleClass().add("post-details-close-button");
        closeButton.setOnAction(event -> start(primaryStage));

        postCard.getChildren().addAll(userInfo, postContent, closeButton);
        postDetails.getChildren().add(postCard);

        Scene scene = new Scene(postDetails, 1200, 700);
        scene.getStylesheets().add("file:styles/slick.css");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private HBox createPostDetailsHeader(String fullName, String username) {
        HBox userInfo = new HBox(15);
        userInfo.getStyleClass().add("post-user-info");

        Label userIcon = createLabel("üë§", "post-user-icon");
        VBox userDetails = new VBox(5);
        userDetails.getChildren().addAll(createLabel(fullName, "post-details-full-name"), createLabel(username, "post-details-username"));

        userInfo.getChildren().addAll(userIcon, userDetails);
        return userInfo;
    }

    private VBox createSuggestions() {
        VBox suggestions = new VBox(15);
        suggestions.getStyleClass().add("suggestions");

        suggestions.getChildren().add(createLabel("Trending Now", "suggestions-title"));
        for (int i = 1; i <= 5; i++) {
            suggestions.getChildren().add(createLabel("#Trend" + i, "trend-item"));
        }
        return suggestions;
    }

    public static void main(String[] args) {
        launch(args);
    }
}